<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[乐园遗梦]]></title><description><![CDATA[碎碎念为主]]></description><link>http://blog.inori.icu</link><generator>RSS for Node</generator><lastBuildDate>Sun, 09 Dec 2018 16:47:19 GMT</lastBuildDate><item><title><![CDATA[攻壳机动队2：无罪]]></title><description><![CDATA[前言 我该打……我拖延了……
攻壳系列是难得我从真人电影入坑并到最后走向原著并花钱入手实体书的作品（说来惭愧我花在二次元上的钱并不多……支持正版的行为更是屈指可数 哭），本身的优秀程度无需我多言，从原著在断更1…]]></description><link>http://blog.inori.icu/2018-12-09/</link><guid isPermaLink="false">http://blog.inori.icu/2018-12-09/</guid><pubDate>Sun, 09 Dec 2018 14:46:56 GMT</pubDate><content:encoded>&lt;h3&gt;前言&lt;/h3&gt;
&lt;p&gt;我该打……我拖延了……
攻壳系列是难得我从真人电影入坑并到最后走向原著并花钱入手实体书的作品（说来惭愧我花在二次元上的钱并不多……支持正版的行为更是屈指可数 哭），本身的优秀程度无需我多言，从原著在断更15年后依然被好莱坞相中并搬上大荧幕这点就足以通俗表明。说起来有趣的一点是，荧幕上攻壳的形象是灰暗而（相对）严肃的，但在阅读原著后才了解到，原著中的攻壳笔触其实相对明快，虽然涉及的领域、思考一致，但是很好地使用各种小闹剧一笔带走，并不会在阅读后让人产生压抑感。本文则是在阅读原著后再次观看 攻壳2：无罪 所带来的观感。（好险，差点扯远了&lt;/p&gt;
&lt;h3&gt;观看预警&lt;/h3&gt;
&lt;p&gt;从文体上来看本文不属于正统观后感或诸如此类的东西，因为我的文学功底并不好但是又十分想分享一点东西，所以本文属于看到哪想到哪就写到哪的类型。&lt;/p&gt;
&lt;h3&gt;剧透&lt;/h3&gt;
&lt;p&gt;本文包含大量剧透（其实也不算很大量…自认已经很节制了但是毕竟是感想总跟剧情分不开），不如说本文的行文线索就是整个电影的的播放进度……&lt;/p&gt;
&lt;p&gt;我是真的一边二周目一边暂停写感想的……&lt;/p&gt;
&lt;h3&gt;阅读建议&lt;/h3&gt;
&lt;p&gt;建议满足所有以下条件的人群阅读&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对本电影已经一周目了（最最最最最最最最基本的阅读观后感条件&lt;/li&gt;
&lt;li&gt;对剧情整体依旧保有着一个相对清晰的记忆（不然你会对下文感到特别诧异：这在说啥&lt;/li&gt;
&lt;li&gt;时间多无处打发且不在意浪费在一篇文笔糟糕得朴素博文上（🤦‍&lt;/li&gt;
&lt;li&gt;不会打我（&gt;_&amp;#x3C;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;正文真的要来了&lt;/h3&gt;
&lt;h3&gt;正文&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一下以电影待指 &lt;code class=&quot;language-text&quot;&gt;攻壳机动队2: 无罪&lt;/code&gt;&lt;a href=&quot;https://movie.douban.com/subject/1291566/&quot;&gt;豆瓣&lt;/a&gt;&amp;#x26;&lt;a href=&quot;https://bangumi.tv/subject/238&quot;&gt;Bangumi番组计划&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;电影全程充斥了大量符号意义的文字，比如开头“觀”字覆盖的摄像头。在一开始观看时我还以为自己拿到了假冒伪劣的影像，一般而言科幻电影在描述未来产物时都会浓墨重彩的堆砌零件细节（是的我就是说Iron Man）,比如接下来几分钟后出现的十分带有未来感的警车。&lt;/p&gt;
&lt;p&gt;比较不明白的地方：在取回人偶核验情况时，托古沙和巴特两人经过的的是，一个跳蚤市场？一个带机密性质的场所建立在跳蚤市场上？&lt;/p&gt;
&lt;p&gt;托古沙和哈乐葳（我是按着日版繁中的翻译来的了……)的对话也是比较有意思的一段。首先是“自杀”与“自毁”一词的特意区分（在后边的剧情中就没有像此刻一样有意区分），一个不起眼的伏笔。我感觉好的电影就该像这样，在适当的时候抛出一个出刊符合主题背景的思考冲突，而结尾时遥相呼应。然后时关于幼童与人偶的思辨，这里始终觉得导演（编剧？）像表达的并不是台词所传述的那样，幼童是否是人类，又抑或是人类对人偶的思念的延续？这与最后的真相似乎有所相关，但又让我感到莫名的差距：这段对话似乎是在思考另一个同等严肃的问题。&lt;/p&gt;
&lt;p&gt;我最最最最最会心一笑（酸）的场景大概就是石川载巴特回去的一小节。背景音乐&lt;a href=&quot;https://music.163.com/#/song?id=568219&quot;&gt;River of Crystals&lt;/a&gt;缓缓响起，石川娓娓交待少校消失的故事背景，与巴特两人进行着单身味浓重的对话，挖出搭档change后巴特的些许落寂————“石川，你最近变多嘴了”（生气&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt; “Nothing last”, you said&lt;/p&gt;
&lt;p&gt; but everything still hold meaning in my heart&lt;/p&gt;
&lt;p&gt; …&lt;/p&gt;
&lt;p&gt; i hear your voice echoing&lt;/p&gt;
&lt;p&gt; but i am still alone, i am alone, alone…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回家之后，只有一条老狗出来迎接，连啤酒都是老狗的标记，似乎这里只有这一条老狗在维持着巴特家的感觉……再看看我，连狗都没有……&lt;/p&gt;
&lt;p&gt;（不许吐槽老狗！我也不知道狗老不老！但这是必要的修辞手法！用来衬托主人公寂寞的心境……好吧，我编不下去了，鬼知道我写原稿的时候是怎么想的，我现在只是把稿子的字一个一个敲上来&lt;/p&gt;
&lt;p&gt;去了流氓地盘上看到巴特一言不合掏机枪的懵圈托古沙好可爱！
一脸酷爽挺直腰挨骂的巴特也好可爱！还有托古沙那个小眼神：you see you !老爷子说的就是你！锤你小胸口！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;中途唱诗那段开始我就有点看不来了。剧情在看过原著后能跟上没错，但是对于各种场景切换，也就只有壮观一感，剩下都是懵圈。在心境有了改变后会做四周目的重温。&lt;/p&gt;
&lt;p&gt;全片的最后一段。救出小女孩后静静听取了事情缘由的巴特怒气反问：“难道你都没考虑过牺牲者？我倒可不是说那些人类，我说的是，那些被你牺牲的人偶！”女孩一愣，随后委屈反驳：“毕竟，毕竟我也不想变成人偶啊！”电影副标题中无罪一词，大概也意在此处了。因故袭击人类的人偶，看似万恶实则“无辜“；渴求救赎而呼喊的幼童，看似无罪却以本意”杀害“人偶。&lt;/p&gt;
&lt;h3&gt;后&lt;/h3&gt;
&lt;p&gt;敲完全篇之后，心里越发觉得全文并没有准确地把自己地心境给表现到文字上。但又无法：再推倒重来，大概也不会好到哪里去，甚至有更差的可能性。就这样吧，当作日记一般便是。&lt;/p&gt;
&lt;p&gt;晚安各位&lt;/p&gt;
&lt;p&gt;2018年12月10日00点45分&lt;/p&gt;</content:encoded></item><item><title><![CDATA[关于重试]]></title><description><![CDATA[…]]></description><link>http://blog.inori.icu/2018-11-29/</link><guid isPermaLink="false">http://blog.inori.icu/2018-11-29/</guid><pubDate>Thu, 29 Nov 2018 14:20:42 GMT</pubDate><content:encoded>&lt;p&gt;今天一天下来的总结就是：搬石头砸自己脚。&lt;/p&gt;
&lt;p&gt;关于重试这个需求其实一直都伴随着我的代码，但是以前都觉得麻烦一直选择性忽视。到了今天感觉不能继续躲了（主动 被动因素都有就是了），然后一天都坑在这上边了，完全不知道怎么着手进行。&lt;/p&gt;
&lt;h3&gt;迭代重试&lt;/h3&gt;
&lt;p&gt;最初想出来的重试流程是把自身的变量定义传到retry函数里作为一个参数；当条件不符合以及重试数不达标时，迭代调用传入的函数。这里涉及到一个问题就是返回流程，搞了一天我都没搞好迭代的返回应该怎么处理（回家走路时想了一下觉得有一套路子可行但是代码写出来并不优雅…而且也还是有点绕…）。&lt;/p&gt;
&lt;h3&gt;解耦重试流程&lt;/h3&gt;
&lt;p&gt;回家后洗澡继续想，慢慢地思维变得正常起来：既然之前的流程时迭代的，迭代对于自己来说有点绕，那能不能改成常规循环？怎么才能满足循环条件？&lt;/p&gt;
&lt;p&gt;要循环调用，就意味着，循环体与循环语句必须解耦，两者需要互不干扰。&lt;/p&gt;
&lt;p&gt;之前的写法是 函数运行-&gt;(inside)判断函数是否合规-&gt;不合规就调用函数本体 ,但是重试后合规的话，应该怎么返回，这里有点绕了- -（是的我知道我很菜&lt;/p&gt;
&lt;p&gt;现在要解耦，那就需要 生成值的函数 与 判断值的函数 必须分开，然后由重试函数包裹进行判断重试。理解这一层后重试函数就不难实现了。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style language-css&quot;&gt;
  &lt;span class=&quot;token selector&quot;&gt;#count::after&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;maybe&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;isRight&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; val &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; val &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.999999999999&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; tryAble &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maybe&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; isRight&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; times&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; count &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; flag
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      count &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; times &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;flag
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; val

      count&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;

      &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        val &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;maybe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        flag &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;isRight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;val&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;count&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;data&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;val&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;flag&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;count&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;done at: &apos;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;tryAble&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maybe&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; isRight&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ps: 或许会更新注释以及添加砸自己脚的那个重试写法（的正确版本）。&lt;/p&gt;
&lt;p&gt;晚安各位&lt;/p&gt;
&lt;p&gt;2018年11月29日 22点23分&lt;/p&gt;</content:encoded></item><item><title><![CDATA[晚归，小程序，预告]]></title><description><![CDATA[第一篇更新，这是个好势头？ 写了好一阵子的小程序了，jd的tora框架。回头看了一眼当初选这个框架时喜欢的特性，其实一个都没用上（原声兼容，自带starter,能集成dva）；中间甚至发现了奇怪的坑（当然，这中间有一大部分其实算是小程序自带的坑）。 再次遇到了底部栏input…]]></description><link>http://blog.inori.icu/2018-11-27/</link><guid isPermaLink="false">http://blog.inori.icu/2018-11-27/</guid><pubDate>Tue, 27 Nov 2018 14:13:36 GMT</pubDate><content:encoded>&lt;p&gt;第一篇更新，这是个好势头？&lt;/p&gt;
&lt;p&gt;写了好一阵子的小程序了，jd的tora框架。回头看了一眼当初选这个框架时喜欢的特性，其实一个都没用上（原声兼容，自带starter,能集成dva）；中间甚至发现了奇怪的坑（当然，这中间有一大部分其实算是小程序自带的坑）。&lt;/p&gt;
&lt;p&gt;再次遇到了底部栏input被键盘遮挡的问题，心里感觉实在无解但是看着**领导丢出来的小红书，他居然能做到我切换键盘高度后会自动适配，心里又燃起一阵对抗。明天尝试用resize特性来实现一下，看能不能搞定。&lt;/p&gt;
&lt;p&gt;这周末看起来应该会是双休，公司都在预定去团建了。到时候应该会再更新一篇&lt;a href=&quot;https://zh.moegirl.org/%E6%94%BB%E5%A3%B3%E6%9C%BA%E5%8A%A8%E9%98%9F2_%E6%97%A0%E7%BD%AA&quot;&gt;攻壳机动队2：无罪&lt;/a&gt;的观后感。&lt;/p&gt;
&lt;p&gt;各位晚安。&lt;/p&gt;
&lt;p&gt;2018年11月27日 22点24分&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Hello World]]></title><description><![CDATA[搞了好久终于把gatsby搞定了！个人的第一个博客应该算是正式开始了。 估计也没啥人看得到就是了 -_- 2018年11月26日 00点05分]]></description><link>http://blog.inori.icu/hello-world/</link><guid isPermaLink="false">http://blog.inori.icu/hello-world/</guid><pubDate>Sun, 25 Nov 2018 15:58:43 GMT</pubDate><content:encoded>&lt;p&gt;搞了好久终于把gatsby搞定了！个人的第一个博客应该算是正式开始了。&lt;/p&gt;
&lt;p&gt;估计也没啥人看得到就是了 -_-&lt;/p&gt;
&lt;p&gt;2018年11月26日 00点05分&lt;/p&gt;</content:encoded></item></channel></rss>