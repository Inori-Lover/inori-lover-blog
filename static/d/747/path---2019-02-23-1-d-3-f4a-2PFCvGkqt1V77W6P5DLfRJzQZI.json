{"data":{"site":{"siteMetadata":{"title":"乐园遗梦","author":"inori_lover"}},"markdownRemark":{"id":"06b53954-21b2-51e9-8fe9-6666173b52e5","excerpt":"缘由 在写小程序的时候会发现有些后台提交的文章会导致小程序崩溃冻住，或者处理函数发生错误没法走下去。一开始没注意因为是真的小概率事件而且复现条件不明，直到有一天发生这个需求：我需要把文章一部分切割出来作为分享URL…","html":"<h3>缘由</h3>\n<p>在写小程序的时候会发现有些后台提交的文章会导致小程序崩溃冻住，或者处理函数发生错误没法走下去。一开始没注意因为是真的小概率事件而且复现条件不明，直到有一天发生这个需求：我需要把文章一部分切割出来作为分享URL参数丢出来，这个问题可以稳定复现了：某一篇文章点击分享按钮没反应。经过一番debug后才发现是emoji切割产生的废弃字符导致下面这类代码出错了：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'😮'</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>掩盖</h3>\n<p>由于第一次碰到类似的问题，js也没找到什么原生的api可以用于安全切割emoji字符串，只能暂时跟运营商量先把emoji往后移动，只要我需要切割的部分不包含就完事大吉了。经过两个汉堡的艰难谈判之后我取得了一个版本的宽容期。</p>\n<h3>社区方案</h3>\n<p><a href=\"https://www.npmjs.com/package/emoji-aware\">emoji-aware</a>是第一个我能找到的支持emoji切割的方案，它不仅支持普通emoji还支持了高位复合emoji(如：’👨‍👩‍👧‍👦’)，查看源码之后发现是一个先转成array对array进行切割后再复合的<a href=\"https://github.com/beaugunderson/emoji-aware/blob/master/emoji-aware.js#L5\">思路</a>，为了支持高位emoji还特意写了一个parse。正觉得还行的时候发现该库的第一行有一条Note:</p>\n<blockquote>\n<p><em>Note:</em> Lodash’s <code class=\"language-text\">toArray</code> (as of 4.0.0) and <code class=\"language-text\">split</code> (as of 4.9.0) functions\nnow correctly split strings that contain emoji; so if that’s all you need to do\nthen <a href=\"https://lodash.com/\">Lodash</a> is a great fit.</p>\n</blockquote>\n<p>嗯嗯，是你了。</p>\n<h3>最后：Lodash</h3>\n<p>绕了一圈发现绝大部分的emoji字符串切割都是使用同一个思路，先把字符串展开成数组，对数组进行切割后复合为字符串来代替直接对字符串进行操作。这个操作思路的最大好处是可以自定义一个展开数组的逻辑来支持定制需求（在这里就是对高位unicode字符的正确支持），剩下的事情就是常规操作，可以坐下慢慢秀。</p>\n<p>下边就是从Lodash里边抽出来的关于toArray的代码, 由于Lodash里边的toArray还包含了很多其他类型对象的支持但是这些对于我来说其实并没用所以这里就做了精简，结合切割需求直接把最后的需求一起实现(copy-parse)了。</p>\n<blockquote>\n<p>代码转最后附录</p>\n</blockquote>\n<h3>求助？</h3>\n<p>其实在最早的时候上网查说阮一峰老师有一篇博文提到了如何切割emoji以及检测是否有被剪切坏的emoji，但是实在没找到这篇文章？</p>\n<p>另最后贴的一个链接里边是关于diss阮一峰老师的。。。。</p>\n<p>emm，总体来说我还是很尊敬这位互联网老兵的贴出来只不过是刚好里边涉及到了关于这次的主题 编码 的。</p>\n<h3>推荐阅读</h3>\n<ol>\n<li><a href=\"https://mathiasbynens.be/notes/javascript-unicode\">JavaScript has a Unicode problem · Mathias Bynens</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2017/04/emoji.html\">Emoji 简介</a></li>\n<li><a href=\"https://www.v2ex.com/t/343634?p=1\">阮一峰的文章有哪些常见性错误</a></li>\n</ol>\n<h3>附录</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//@ts-check</span>\n<span class=\"token comment\">/** come from https://github.com/lodash/lodash/blob/4.17.11/lodash.js#L755 */</span>\n\n<span class=\"token comment\">/** Used to compose unicode character classes. */</span>\n<span class=\"token keyword\">var</span> rsAstralRange <span class=\"token operator\">=</span> <span class=\"token string\">'\\\\ud800-\\\\udfff'</span><span class=\"token punctuation\">,</span>\n    rsComboMarksRange <span class=\"token operator\">=</span> <span class=\"token string\">'\\\\u0300-\\\\u036f'</span><span class=\"token punctuation\">,</span>\n    reComboHalfMarksRange <span class=\"token operator\">=</span> <span class=\"token string\">'\\\\ufe20-\\\\ufe2f'</span><span class=\"token punctuation\">,</span>\n    rsComboSymbolsRange <span class=\"token operator\">=</span> <span class=\"token string\">'\\\\u20d0-\\\\u20ff'</span><span class=\"token punctuation\">,</span>\n    rsComboRange <span class=\"token operator\">=</span> rsComboMarksRange <span class=\"token operator\">+</span> reComboHalfMarksRange <span class=\"token operator\">+</span> rsComboSymbolsRange<span class=\"token punctuation\">,</span>\n    rsVarRange <span class=\"token operator\">=</span> <span class=\"token string\">'\\\\ufe0e\\\\ufe0f'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/** Used to compose unicode capture groups. */</span>\n<span class=\"token keyword\">var</span> rsAstral <span class=\"token operator\">=</span> <span class=\"token string\">'['</span> <span class=\"token operator\">+</span> rsAstralRange <span class=\"token operator\">+</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">,</span>\n    rsCombo <span class=\"token operator\">=</span> <span class=\"token string\">'['</span> <span class=\"token operator\">+</span> rsComboRange <span class=\"token operator\">+</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">,</span>\n    rsFitz <span class=\"token operator\">=</span> <span class=\"token string\">'\\\\ud83c[\\\\udffb-\\\\udfff]'</span><span class=\"token punctuation\">,</span>\n    rsModifier <span class=\"token operator\">=</span> <span class=\"token string\">'(?:'</span> <span class=\"token operator\">+</span> rsCombo <span class=\"token operator\">+</span> <span class=\"token string\">'|'</span> <span class=\"token operator\">+</span> rsFitz <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">,</span>\n    rsNonAstral <span class=\"token operator\">=</span> <span class=\"token string\">'[^'</span> <span class=\"token operator\">+</span> rsAstralRange <span class=\"token operator\">+</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">,</span>\n    rsRegional <span class=\"token operator\">=</span> <span class=\"token string\">'(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}'</span><span class=\"token punctuation\">,</span>\n    rsSurrPair <span class=\"token operator\">=</span> <span class=\"token string\">'[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]'</span><span class=\"token punctuation\">,</span>\n    rsZWJ <span class=\"token operator\">=</span> <span class=\"token string\">'\\\\u200d'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/** Used to compose unicode regexes. */</span>\n<span class=\"token keyword\">var</span> reOptMod <span class=\"token operator\">=</span> rsModifier <span class=\"token operator\">+</span> <span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span>\n    rsOptVar <span class=\"token operator\">=</span> <span class=\"token string\">'['</span> <span class=\"token operator\">+</span> rsVarRange <span class=\"token operator\">+</span> <span class=\"token string\">']?'</span><span class=\"token punctuation\">,</span>\n    rsOptJoin <span class=\"token operator\">=</span> <span class=\"token string\">'(?:'</span> <span class=\"token operator\">+</span> rsZWJ <span class=\"token operator\">+</span> <span class=\"token string\">'(?:'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>rsNonAstral<span class=\"token punctuation\">,</span> rsRegional<span class=\"token punctuation\">,</span> rsSurrPair<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">')'</span> <span class=\"token operator\">+</span> rsOptVar <span class=\"token operator\">+</span> reOptMod <span class=\"token operator\">+</span> <span class=\"token string\">')*'</span><span class=\"token punctuation\">,</span>\n    rsSeq <span class=\"token operator\">=</span> rsOptVar <span class=\"token operator\">+</span> reOptMod <span class=\"token operator\">+</span> rsOptJoin<span class=\"token punctuation\">,</span>\n    rsSymbol <span class=\"token operator\">=</span> <span class=\"token string\">'(?:'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>rsNonAstral <span class=\"token operator\">+</span> rsCombo <span class=\"token operator\">+</span> <span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span> rsCombo<span class=\"token punctuation\">,</span> rsRegional<span class=\"token punctuation\">,</span> rsSurrPair<span class=\"token punctuation\">,</span> rsAstral<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */</span>\n<span class=\"token keyword\">var</span> reUnicode <span class=\"token operator\">=</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span>rsFitz <span class=\"token operator\">+</span> <span class=\"token string\">'(?='</span> <span class=\"token operator\">+</span> rsFitz <span class=\"token operator\">+</span> <span class=\"token string\">')|'</span> <span class=\"token operator\">+</span> rsSymbol <span class=\"token operator\">+</span> rsSeq<span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */</span>\n<span class=\"token keyword\">var</span> reHasUnicode <span class=\"token operator\">=</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'['</span> <span class=\"token operator\">+</span> rsZWJ <span class=\"token operator\">+</span> rsAstralRange  <span class=\"token operator\">+</span> rsComboRange <span class=\"token operator\">+</span> rsVarRange <span class=\"token operator\">+</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">unicodeToArray</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>reUnicode<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hasUnicode</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> reHasUnicode<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">asciiToArray</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">stringToArray</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">hasUnicode</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">?</span> <span class=\"token function\">unicodeToArray</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token function\">asciiToArray</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> toArray <span class=\"token operator\">=</span> stringToArray\n<span class=\"token comment\">/**\n * 安全的字符串切割\n *\n * @private\n * @param {string} str 待切割的字符串\n * @param {number} start 切割起始位置\n * @param {number} len 切割长度\n * @returns {string} 返回切割好的字符串\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">safeSubstring</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * @example\n * var test = safeSubstring('我爱大家👨‍👩‍👧‍👦哦~', 0 , 5)\n * console.clear()\n * console.log([\n *  test,\n *  encodeURI(test),\n *  decodeURI(encodeURI(test)),\n * ])\n */</span></code></pre></div>","frontmatter":{"title":"怎么切割emoji😮","date":"February 23, 2019"}}},"pageContext":{"slug":"/2019-02-23/","previous":{"fields":{"slug":"/2019-01-02/"},"frontmatter":{"title":"2019年写的2018年终总结"}},"next":{"fields":{"slug":"/2019-06-23/"},"frontmatter":{"title":"jwt漫谈"}}}}